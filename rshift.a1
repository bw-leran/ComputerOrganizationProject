// cell[21] = cell[100] + cell[100]>>1 + cell[100]>>2 + ... + 1

// init registers:
loadc 0   // reg[0] = 0x64
64
loadc 1   // reg[1] = 1
1
load 2 0  // reg[2] = cell[0x64] = # interations to do
loadc 3   // reg[3] = result = 1
1
loadc 4   // reg[4] = goto target = 9
9
loadc 5
1

// instruction #9:

load 3 0  // reg[3] = cell[reg[0]] = cell[100]
add 1 3 // reg[1] += reg[3]
add 0 2 // reg[0] += reg[2]

rshift 3 3 // reg[3] = 2 * reg[3]

add 1 3 // reg[1] += reg[3]
add 0 2 // reg[0] += reg[2]

rshift 3 3 // reg[3] = 2 * reg[3]
rshift 3 3 // reg[3] = 2 * reg[3]

add 1 3 // reg[1] += reg[3]
add 0 2 // reg[0] += reg[2]

rshift 3 3 // reg[3] = 2 * reg[3]
rshift 3 3 // reg[3] = 2 * reg[3]
rshift 3 3 // reg[3] = 2 * reg[3]

add 1 3 // reg[1] += reg[3]
add 0 5 // reg[0] += reg[5]

// sub 2 1  // reg[2] = reg[2] - 1
if 2 4   // if reg[2] > 0 goto 9

// store result
add 0 1  // reg[0] = 0x65
store 0 3  // cell[0x65] = reg[3]
halt
0
0
0
0
0
5
0